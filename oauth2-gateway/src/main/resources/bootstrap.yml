my:
  hostname: ${MY_HOST_NAME:oauth2-gateway}
  application-name: oauth2-gateway
  session-name: GATEWAY_SESSION
  username: ${MY_USERNAME:forsrc}
  password: ${MY_PASSWORD:forsrc}
  port: ${MY_PORT:80}
#  oauth2-server: http://oauth2-server:20000/oauth2-server
#  oauth2-resource-server: http://oauth2-resource-server:21000/oauth2-resource-server
#  oauth2-client: http://oauth2-client:22000/oauth2-client
  gateway-base-url: ${MY_GATEWAY:http://oauth2-gateway:80}
  gateway-oauth2-server: ${my.gateway-base-url}/oauth2-server/
  gateway-oauth2-resource_server: ${my.gateway-base-url}/oauth2-resource-server/
  gateway-oauth2-client: ${my.gateway-base-url}/oauth2-client/
  gateway-oauth2-eureka-server: ${my.gateway-base-url}/oauth2-eureka-server/
  gateway-oauth2-admin-server: ${my.gateway-base-url}/oauth2-admin-server/
  eureka-server: ${MY_EUREKA_SERVER:http://forsrc:forsrc@oauth2-eureka-server:8080/eureka}
  admin-server: ${MY_ADMIN_SERVER:oauth2-admin-server:8080}

server:
  port: ${my.port}
  servlet:
    session:
      cookie:
        name: ${my.session-name}
  forward-headers-strategy: framework
  tomcat:
    remoteip:
      remote-ip-header: x-forwarded-for
      protocol-header: x-forwarded-proto

  ssl:
    name: my-oauth2
    key-store-provider: SUN
    key-store-type: JKS
    key-store: classpath:ssl/${server.ssl.name}.server.keystore
    key-store-password: forsrc
    key-alias: ${server.ssl.name}.server
    enabled: false
    #trust-store-provider: SUN
    #trust-store-type:     JKS
    #trust-store:          classpath:ssl/${server.ssl.name}.server.keystore
    #trust-store-password: forsrc
    #client-auth:          need




spring:
  application:
    name: ${my.application-name}
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
  boot:
    admin:
      client:
        url: http://${my.admin-server}
        username: ${my.username}
        password: ${my.password}
        instance:
          service-base-url: ${my.gateway-base-url}
          management-base-url: ${my.gateway-base-url}

  datasource:
    url: ${MY_DB_URL:jdbc:h2:~/tmp/db/h2/my-oauth2-gateway.h2;AUTO_SERVER=TRUE;MODE=MYSQL;}
    username: ${MY_DB_USERNAME:sa}
    password: ${MY_DB_PASSWORD:sa}
    driver-class-name: ${MY_DB_DRIVER:org.h2.Driver}
  #    data:
  #      - classpath:schema.sql
  #      - classpath:data.sql
  jpa:
    database-platform: ${MY_DB_DIALECT:org.hibernate.dialect.H2Dialect}
    show-sql: true
    properties:
      hibernate.enable_lazy_load_no_trans: true
      hibernate.show-sql: true
      hibernate.hbm2ddl.auto: update
    open-in-view: true

  cloud:
    gateway:
      httpclient:
        ssl:
          useInsecureTrustManager: true
      discovery:
        locator:
          enabled: true
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedHeaders: "*"
            allowedOrigins: "*"
            allowedMethods: GET,POST,DELETE,PUT,OPTION
      forwarded:
        enabled: true
      x-forwarded:
        enabled: true
        prefix-enabled: true
        for-enabled: true
        proto-enabled: true
        host-enabled: true
        host-append: false
        for-append: false
        proto-append: false
        prefix-append: false
        port-append: false
      routes:
        - id: oauth2-server
          uri: lb://oauth2-server
          predicates:
            - Path=/oauth2-server/**
          filters:
            - CachingRequestBodyFilter
            - AddRequestHeader=gateway_enable, true
            - AddRequestHeader=gateway_oauth2_server, ${my.gateway-oauth2-server}
            - RewritePath=/oauth2-server/(?<segment>/?.*), /$\{segment}
            - name: Hystrix
              args:
                name: oauth2-server
                fallbackUri: forward:/fallback
        - id: oauth2-resource-server
          uri: lb://oauth2-resource-server
          predicates:
            - Path=/oauth2-resource-server/**
          filters:
            - CachingRequestBodyFilter
            - AddRequestHeader=gateway_enable, true
            - AddRequestHeader=gateway_oauth2_server, ${my.gateway-oauth2-server}
            - RewritePath=/oauth2-resource-server(?<segment>/?.*), /$\{segment}
            - name: Hystrix
              args:
                name: oauth2-resource-server
                fallbackUri: forward:/fallback
        - id: oauth2-client
          uri: lb://oauth2-client
          predicates:
            - Path=/oauth2-client/**
          filters:
            - CachingRequestBodyFilter
            - AddRequestHeader=gateway_enable, true
            - AddRequestHeader=gateway_oauth2_server, ${my.gateway-oauth2-server}
            - AddRequestHeader=gateway_oauth2_client, ${my.gateway-oauth2-client}
            - RewritePath=/oauth2-client/(?<segment>/?.*), /$\{segment}
            - name: Hystrix
              args:
                name: oauth2-client
                fallbackUri: forward:/fallback
        - id: oauth2-eureka-server
          uri: lb://oauth2-eureka-server
          predicates:
            - Path=/oauth2-eureka-server/**
          filters:
            - CachingRequestBodyFilter
            - AddRequestHeader=gateway_enable, true
            - AddRequestHeader=gateway_oauth2_server, ${my.gateway-oauth2-server}
            - AddRequestHeader=gateway_oauth2_eureka_server, ${my.gateway-oauth2-eureka-server}
            - RewritePath=/oauth2-eureka-server/(?<segment>/?.*), /$\{segment}
            - name: Hystrix
              args:
                name: oauth2-eureka-server
                fallbackUri: forward:/fallback
        - id: oauth2-admin-server
          uri: lb://oauth2-admin-server
          predicates:
            - Path=/oauth2-admin-server/**
          filters:
            - CachingRequestBodyFilter
            - AddRequestHeader=gateway_enable, true
            - AddRequestHeader=gateway_oauth2_server, ${my.gateway-oauth2-server}
            - AddRequestHeader=gateway_oauth2_eureka_server, ${my.gateway-oauth2-eureka-server}
            - RewritePath=/oauth2-admin-server/(?<segment>/?.*), /$\{segment}
            - name: Hystrix
              args:
                name: oauth2-admin-server
                fallbackUri: forward:/fallback
#        - id: oauth2-gateway
#          uri: lb://oauth2-gateway
#          predicates:
#            - Path=/oauth2-gateway/**
#          filters:
#            - AddRequestHeader=gateway_enable, true
#            - AddRequestHeader=gateway_oauth2_server, ${my.gateway-oauth2-server}
#            - AddRequestHeader=gateway_oauth2_eureka_server, ${my.gateway-oauth2-eureka-server}
#            - RewritePath=/oauth2-gateway/(?<segment>/?.*), /$\{segment}
#            - name: Hystrix
#              args:
#                name: oauth2-gateway
#                fallbackUri: forward:/fallback

eureka:
  instance:
    non-secure-port-enabled: false
    secure-port-enabled: true
    #prefer-ip-address:              true
    hostname: ${my.hostname}
    instance-id: ${eureka.instance.hostname}:${spring.application.name}:${server.port}
    appname: ${spring.application.name}
    leaseRenewalIntervalInSeconds: 5
    health-check-url: https://${eureka.instance.hostname}:${server.port}/actuator/health
    home-page-url: https://${eureka.instance.hostname}:${server.port}
    status-page-url: ${eureka.instance.home-page-url}/actuator/info
    metadata-map:
      user.name: forsrc
      user.password: forsrc
  client:
    service-url:
      # defaultZone: http://forsrc:forsrc@${my.eureka-server}/eureka
      defaultZone: ${my.eureka-server}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    hystrix:
      stream:
        enabled: true
    health:
      show-details: ALWAYS
      probes:
        enabled: true

logging:
  level:
    org.springframework.cloud.gateway: info
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace
hystrix:
  dashboard:
    proxy-stream-allow-list: "*"
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
          thread:
            timeoutInMilliseconds:  120000
          semaphore:
            maxConcurrentRequests: 1000
      circuitBreaker:
        sleepWindowInMilliseconds:  5000
