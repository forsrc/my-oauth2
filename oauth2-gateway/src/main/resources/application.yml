server:
  port: 8080
  servlet:
    #context-path: /oauth2-gateway
    session:
      cookie:
        name: GATEWAY_SESSION
        path: /oauth2-gateway
  forward-headers-strategy: framework
  tomcat:
    remoteip:
      remote-ip-header: x-forwarded-for
      protocol-header: x-forwarded-proto

  ssl:
    name: my-oauth2
    key-store-provider: SUN
    key-store-type: JKS
    key-store: classpath:ssl/${server.ssl.name}.server.keystore
    key-store-password: forsrc
    key-alias: ${server.ssl.name}.server
    enabled: true
    #trust-store-provider: SUN
    #trust-store-type:     JKS
    #trust-store:          classpath:ssl/${server.ssl.name}.server.keystore
    #trust-store-password: forsrc
    #client-auth:          need


oauth2-server: http://my-oauth2:20000/oauth2-server
oauth2-resource-server: http://my-oauth2:21000/oauth2-resource-server
oauth2-client: http://my-oauth2:22000/oauth2-client
oauth2-eureka-server: http://my-oauth2:23000/oauth2-eureka-server
oauth2-admin-server: http://my-oauth2:24000/oauth2-admin-server

gateway_oauth2_server: https://my-oauth2:8080/oauth2-server
gateway_oauth2_resource_server: https://my-oauth2:8080/oauth2-resource-server
gateway_oauth2_client: https://my-oauth2:8080/oauth2-client
gateway_oauth2_eureka_server: https://my-oauth2:8080/oauth2-eureka-server

spring:
  application:
    name: oauth2-gateway
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
  boot:
    admin:
      client:
        url: http://my-oauth2:24000/oauth2-admin-server
        username: forsrc
        password: forsrc
        instance:
          service-base-url: https://my-oauth2:8080
          management-base-url: https://my-oauth2:8080

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedHeaders: "*"
            allowedOrigins: "*"
            allowedMethods: GET,POST,DELETE,PUT,OPTION
      forwarded:
        enabled: true
      x-forwarded:
        enabled: true
        prefix-enabled: true
        for-enabled: true
        proto-enabled: true
        host-enabled: true
        host-append: false
        for-append: false
        proto-append: false
        prefix-append: false
        port-append: false
      routes:
        - id: oauth2-server
          uri: lb://oauth2-server
          predicates:
            - Path=/oauth2-server/**
          filters:
            - AddRequestHeader=gateway_enable, true
            - AddRequestHeader=gateway_oauth2_server, ${gateway_oauth2_server}/
            - RewritePath=/oauth2-server/(?<segment>/?.*), /oauth2-server/$\{segment}
        - id: oauth2-resource-server
          uri: lb://oauth2-resource-server
          predicates:
            - Path=/oauth2-resource-server/**
          filters:
            - AddRequestHeader=gateway_enable, true
            - AddRequestHeader=gateway_oauth2_server, ${gateway_oauth2_server}/
            - RewritePath=/oauth2-resource-server(?<segment>/?.*), /oauth2-resource-server/$\{segment}
        - id: oauth2-client
          uri: lb://oauth2-client
          predicates:
            - Path=/oauth2-client/**
          filters:
            - AddRequestHeader=gateway_enable, true
            - AddRequestHeader=gateway_oauth2_server, ${gateway_oauth2_server}/
            - AddRequestHeader=gateway_oauth2_client, ${gateway_oauth2_client}/
            - RewritePath=/oauth2-client/(?<segment>/?.*), /oauth2-client/$\{segment}
        - id: oauth2-eureka-server
          uri: lb://oauth2-eureka-server
          predicates:
            - Path=/oauth2-eureka-server/**
          filters:
            - AddRequestHeader=gateway_enable, true
            - AddRequestHeader=gateway_oauth2_server, ${gateway_oauth2_server}/
            - AddRequestHeader=gateway_oauth2_eureka_server, ${gateway_oauth2_eureka_server}/
            - RewritePath=/oauth2-eureka-server/(?<segment>/?.*), /oauth2-eureka-server/$\{segment}
        - id: oauth2-admin-server
          uri: lb://oauth2-admin-server
          predicates:
            - Path=/oauth2-admin-server/**
          filters:
            - AddRequestHeader=gateway_enable, true
            - AddRequestHeader=gateway_oauth2_server, ${gateway_oauth2_server}/
            - AddRequestHeader=gateway_oauth2_eureka_server, ${gateway_oauth2_eureka_server}/
            - RewritePath=/oauth2-admin-server/(?<segment>/?.*), /oauth2-admin-server/$\{segment}

eureka:
  instance:
    non-secure-port-enabled: false
    secure-port-enabled: true
    #prefer-ip-address:              true
    hostname: my-oauth2
    instance-id: ${eureka.instance.hostname}:${spring.application.name}:${server.port}
    appname: ${spring.application.name}
    leaseRenewalIntervalInSeconds: 10
    health-check-url: https://${eureka.instance.hostname}:${server.port}/actuator/health
    home-page-url: https://${eureka.instance.hostname}:${server.port}
    status-page-url: ${eureka.instance.home-page-url}/actuator/info
    metadata-map:

      user.name: forsrc
      user.password: forsrc
  client:
    service-url:
      defaultZone: http://forsrc:forsrc@my-oauth2:23000/oauth2-eureka-server/eureka

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS

logging:
  level:
    org.springframework.cloud.gateway: info