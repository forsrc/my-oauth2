apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oauth2-gateway
  name: oauth2-gateway
  namespace: oauth2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth2-gateway
  strategy: {}
  template:
    metadata:
      labels:
        app: oauth2-gateway
      # annotations:
      #   co.elastic.logs/enabled: "true"
      #   co.elastic.logs.json-logging/json.keys_under_root: "true"
      #   co.elastic.logs.json-logging/json.add_error_key: "true"
      #   co.elastic.logs.json-logging/json.message_key: "message"
    spec:
      containers:
      - image: forsrc/my-oauth2:oauth2-gateway
        name: oauth2-gateway
        ports:
        - containerPort: 8080
        imagePullPolicy: IfNotPresent #Always
        resources:
        env:
          - name: MY_EUREKA_SERVER
            value: http://forsrc:forsrc@oauth2-eureka-server:8080/eureka
            # value: http://forsrc:forsrc@oauth2-eureka-server-0.oauth2-eureka-server.oauth2.svc.cluster.local:8080/eureka, http://forsrc:forsrc@oauth2-eureka-server-1.oauth2-eureka-server.oauth2.svc.cluster.local:8080/eureka
        livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5

---

apiVersion: v1
kind: Service
metadata:
  name: oauth2-gateway
  namespace: oauth2
spec:
  selector:
    app: oauth2-gateway
  ports:
  - port: 8080
    targetPort: 8080
    name: oauth2-gateway
  type: ClusterIP

---
# kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/cloud/deploy.yaml

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2-gateway
  namespace: oauth2
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "GATEWAY_SESSION"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/session-cookie-path: /
spec:
  rules:
  - host: oauth2-gateway
    http:
      paths:
      - path: /
        pathType: Prefix #"Exact", "Prefix", or "ImplementationSpecific"
        backend:
          service:
            name: oauth2-gateway
            port:
              number: 8080
