my:
  hostname: ${MY_HOST_NAME:oauth2-eureka-server}
  application-name: oauth2-eureka-server
  session-name: EUREKA_SESSION
  username: ${MY_USERNAME:forsrc}
  password: ${MY_PASSWORD:forsrc}
  port: 8080
  #  gateway-port: 8080
  #  gateway-port-to-port: 8080
  eureka-server: ${MY_EUREKA_SERVER:http://forsrc:forsrc@oauth2-eureka-server:8080/eureka}
  admin-server: ${MY_ADMIN_SERVER:my-oauth2:8080}

server:
  port: ${my.port}
  servlet:
    session:
      cookie:
        name: ${my.session-name}

  ssl:
    name: my-oauth2
    key-store-provider: SUN
    key-store-type: JKS
    key-store: classpath:ssl/${server.ssl.name}.server.keystore
    key-store-password: forsrc
    key-alias: ${server.ssl.name}.server
    enabled: false
    #trust-store-provider: SUN
    #trust-store-type:     JKS
    #trust-store:          classpath:ssl/${server.ssl.name}.server.keystore
    #trust-store-password: forsrc
    #client-auth:          need
  forward-headers-strategy: framework
spring:
  freemarker.prefer-file-system-access: false
  application:
    name: ${my.application-name}
  #  security:
  #    basic:
  #      enabled:  true
  #    user:
  #      name:     forsrc
  #      password: forsrc

  boot:
    admin:
      client:
        url: http://${my.admin-server}
        username: ${my.username}
        password: ${my.password}
        instance:
          management-base-url: http://${eureka.instance.hostname}:${server.port}

  security:
    basic:
      enabled: true
    user:
      name: ${my.username}
      password: ${my.password}

eureka:
  instance:
    #prefer-ip-address:              true
    hostname: ${my.hostname}
    instance-id: ${eureka.instance.hostname}:${spring.application.name}:${server.port}
    appname: ${spring.application.name}
    health-check-url-path: /actuator/health
    home-page-url: http://${eureka.instance.hostname}:${server.port}
    status-page-url: ${eureka.instance.home-page-url}/actuator
    leaseRenewalIntervalInSeconds: 5
    metadata-map:
      management.context-path: /actuator
      user.name: ${my.username}
      user.password: ${my.password}
  client:
    registryFetchIntervalSeconds: 5
    registerWithEureka: true
    fetchRegistry: false
    serviceUrl:
      #defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:${server.port}/eureka
      defaultZone: ${my.eureka-server}
  #    initialInstanceInfoReplicationIntervalSeconds: 5
  #    healthcheck:
  #      enabled:                      true
  server:
    enable-self-preservation: true
    eviction-interval-timer-in-ms: 5000

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
      probes:        enabled: true
hystrix:
  dashboard:
    proxy-stream-allow-list: "*"